{{- $storageClass := include "youtrack.backups.storageClass" . }}
{{- if eq .Values.persistence.backups.backupType "objectStorage" }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.persistence.backups.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "youtrack.labels" . | nindent 4 }}
  annotations:
    pv.kubernetes.io/provisioned-by: {{ .Values.persistence.backups.objectStorage.storageProvisioner }}
    everest.io/reclaim-policy: {{ .Values.persistence.backups.objectStorage.reclaimPolicy }}
spec:
  accessModes: {{ include "youtrack.backups.accessModes" . }}
  capacity:
    storage: {{ .Values.persistence.backups.objectStorage.size }}
  csi:
    driver: {{ .Values.persistence.backups.objectStorage.csiDriver }}
    fsType: {{ .Values.persistence.backups.objectStorage.fsType }}
    volumeHandle: {{ .Values.persistence.backups.objectStorage.bucketId }}
    volumeAttributes:
      storage.kubernetes.io/csiProvisionerIdentity: {{ .Values.persistence.backups.objectStorage.storageProvisioner }}
      everest.io/obs-volume-type: {{ .Values.persistence.backups.objectStorage.obsVolumeType }}
      everest.io/region: {{ .Values.persistence.backups.objectStorage.region }}
    nodePublishSecretRef:
      name: {{ .Values.persistence.backups.objectStorage.accessKeySecretName }}
      namespace: {{ .Release.Namespace }}
  persistentVolumeReclaimPolicy: {{ .Values.persistence.backups.objectStorage.persistentVolumeReclaimPolicy }}
  {{- if $storageClass }}
  storageClassName: {{ $storageClass }}
  {{- end }}
  mountOptions:
    {{- if .Values.persistence.backups.objectStorage.mountOptions }}
    {{ .Values.persistence.backups.objectStorage.mountOptions | toYaml | nindent 4 }}
    {{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.persistence.backups.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "youtrack.labels" . | nindent 4 }}
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: {{ .Values.persistence.backups.objectStorage.storageProvisioner }}
    csi.storage.k8s.io/fstype: {{ .Values.persistence.backups.objectStorage.fsType }}
    everest.io/obs-volume-type: {{ .Values.persistence.backups.objectStorage.obsVolumeType }}
    csi.storage.k8s.io/node-publish-secret-namespace: {{ .Release.Namespace }}
    csi.storage.k8s.io/node-publish-secret-name: {{ .Values.persistence.backups.objectStorage.accessKeySecretName }}
spec:
  volumeName: {{ .Values.persistence.backups.name }}
  {{- if $storageClass }}
  storageClassName: {{ $storageClass }}
  {{- end }}
  accessModes: {{ include "youtrack.backups.accessModes" . }}
  resources:
    requests:
      storage: {{ .Values.persistence.backups.objectStorage.size }}

{{- else if eq .Values.persistence.backups.backupType "volumeStorage" }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.persistence.backups.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "youtrack.labels" . | nindent 4 }}
  annotations:
    everest.io/disk-volume-type: {{ .Values.persistence.backups.volumeStorage.storageType }}
spec:
  {{- $storageClass := include "youtrack.backups.storageClass" . }}
  {{- if $storageClass }}
  storageClassName: {{ $storageClass }}
  {{- end }}
  accessModes: {{ include "youtrack.backups.accessModes" . }}
  resources:
    requests:
      storage: {{ .Values.persistence.backups.volumeStorage.storageSize }}
{{- end }}